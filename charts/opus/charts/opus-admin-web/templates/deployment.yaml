apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "opus-admin-web.name" . }}
  namespace: {{ include "opus-admin-web.namespaceName" . }}
  labels:
    {{- include "opus-admin-web.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "opus-admin-web.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "opus-admin-web.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: server
    spec:
      shareProcessNamespace: true
      serviceAccountName: {{ include "opus-admin-web.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "opus-admin-web.name" . }}
          image: {{ .Values.image.repository }}{{ if .Values.image.tag }}:{{ end }}{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: /container-app/server
          command: [ "node","dist/main" ]
          ports:
            - name: http
              protocol: TCP
              containerPort: {{ .Values.service.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /api/health/liveness
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /api/health/readiness
              port: {{ .Values.service.port }}
          startupProbe:
            httpGet:
              path: /api/health/startup
              port: {{ .Values.service.port }}
          envFrom:
            - secretRef:
                name: config
            - secretRef:
                name: server-http
